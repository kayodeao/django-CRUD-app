name: Django CI

on:
  workflow_dispatch:

permissions:
  contents: write
  security-events: write

jobs:
  Checkout_and_Code_Scan:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  
      # - name: Set up Python 3.9
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: 3.9
        
      # - name: Install Dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
        
      # - name: Run Tests
      #   run: |
      #     python manage.py test
  Build_and_Scan_docker_image:
    runs-on: ubuntu-20.04
    # needs: Checkout_and_Code_Scan
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-app:v1.0.${{ github.run_number }}
          push: false
          load: true

    
      - name: Run Trivy vulnerability scanner on docker image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/django-app:v1.0.${{ github.run_number }}'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-app:v1.0.${{ github.run_number }}
          push: true
          

  
  #         GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  #         GIT_PASSWORD: ${{ secrets.GIT_TOKEN }}
